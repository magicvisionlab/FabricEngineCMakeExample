# Setup Build for FabricEngine Module

# Some Globals, which need to be adapted to the FabricEngine Version (maybe we can autodetect them as well ?)
SET(FABRIC_VERSION_MAJ "1")
SET(FABRIC_VERSION_MIN  "12")
SET(FABRIC_VERSION_REV  "0")
SET(FABRIC_VERSION_NO_SUFFIX  "1.12.0")
SET(FABRIC_VERSION  "1.12.0")
SET(FABRIC_VERSION_SUFFIX  "")
SET(FABRIC_DESC  "Dedicated Platform for High-Performance Graphics Applications")


SET(INITIAL_FABRIC_BUILD_OS "")
SET(INITIAL_FABRIC_BUILD_ARCH "")

# Set BUILD_OS
IF(EXISTS $ENV{FABRIC_BUILD_OS})
	SET(INITIAL_FABRIC_BUILD_OS "$ENV{FABRIC_BUILD_OS}")
ELSE(EXISTS $ENV{FABRIC_BUILD_OS})
	# Autodetect Build OS
	IF(WIN32)
		SET(INITIAL_FABRIC_BUILD_OS "Windows")
	ELSEIF(APPLE)
		SET(INITIAL_FABRIC_BUILD_OS "Darwin")
	ELSEIF(UNIX)
		SET(INITIAL_FABRIC_BUILD_OS "Linux")
	ENDIF(WIN32)
ENDIF(EXISTS $ENV{FABRIC_BUILD_OS})

# Set BUILD_ARCH
IF(EXISTS $ENV{FABRIC_BUILD_ARCH})
	SET(INITIAL_FABRIC_BUILD_ARCH "$ENV{FABRIC_BUILD_ARCH}")
ELSE(EXISTS $ENV{FABRIC_BUILD_ARCH})
	# Autodected Architecture
	IF(CMAKE_SIZEOF_VOID_P EQUAL 8)
		SET (INITIAL_FABRIC_BUILD_ARCH "x86_64")
	ELSEIF (CMAKE_SIZEOF_VOID_P EQUAL 4)
		SET (INITIAL_FABRIC_BUILD_ARCH "i686")
	ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 8)
ENDIF$ENV{FABRIC_BUILD_ARCH}

# Allow Customization
OPTION(FABRIC_BUILD_OS "Build OS for FabricEngine Module" ${INITIAL_FABRIC_BUILD_OS})
OPTION(FABRIC_BUILD_ARCH "Build Architecture for FabricEngine Module" ${INITIAL_FABRIC_BUILD_ARCH})


# More infos from Environment
IF(EXISTS $ENV{FABRIC_EDK_DIR})
	SET(FABRIC_EDK_DIR "$ENV{FABRIC_EDK_DIR}")
ELSE(EXISTS $ENV{FABRIC_EDK_DIR})
	MESSAGE(ERROR "The 'FABRIC_EDK_DIR' environment variable must be set.")
ENDIF(EXISTS $ENV{FABRIC_EDK_DIR})

IF(EXISTS $ENV{FABRIC_TOOLS_DIR})
	SET(FABRIC_TOOLS_DIR "$ENV{FABRIC_TOOLS_DIR}")
ELSE(EXISTS $ENV{FABRIC_TOOLS_DIR})
	MESSAGE(ERROR "The 'FABRIC_TOOLS_DIR' environment variable must be set.")
ENDIF(EXISTS $ENV{FABRIC_TOOLS_DIR})

# Add the EDK includes
INCLUDE_DIRECTORIES( "${FABRIC_EDK_DIR}/include")

# Define kl2edk tool
IF(FABRIC_BUILD_OS STREQUAL "Windows")
	SET(KL2EDK_BINARY "${FABRIC_TOOLS_DIR}/kl2edk.exe")
ELSEIF(FABRIC_BUILD_OS STREQUAL "Windows")
	SET(KL2EDK_BINARY "${FABRIC_TOOLS_DIR}/kl2edk")
ENDIF(FABRIC_BUILD_OS STREQUAL "Windows")

# Set the build flags
SET(FABRIC_MODULE_CFLAGS "")
SET(FABRIC_MODULE_LINKFLAGS "")
SET(FABRIC_MODULE_DEFINES "")

IF(CMAKE_BUILD_TYPE MATCHES RELEASE)
	SET(FABRIC_MODULE_DEFINES "NDEBUG")
ENDIF(CMAKE_BUILD_TYPE MATCHES RELEASE)
	
IF(FABRIC_BUILD_OS STREQUAL "Darwin")
	SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-Wall" "-fvisibility=hidden" "-mmacosxversion-min=10.7")

	SET(FABRIC_MODULE_LINKFLAGS ${FABRIC_MODULE_LINKFLAGS} "-w" "-mmacosx-version-min=10.7")

	IF(FABRIC_BUILD_ARCH STREQUAL "x86_64")
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-arch" "x86_64")
		SET(FABRIC_MODULE_LINKFLAGS ${FABRIC_MODULE_LINKFLAGS} "-arch" "x86_64")
	ENDIF(FABRIC_BUILD_ARCH STREQUAL "x86_64")

	IF(CMAKE_BUILD_TYPE MATCHES DEBUG)
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-g")
	ELSEIF(CMAKE_BUILD_TYPE MATCHES DEBUG)
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-O2")
	ENDIF(CMAKE_BUILD_TYPE MATCHES DEBUG)
	
ELSEIF(FABRIC_BUILD_OS STREQUAL "Linux")
	SET(FABRIC_MODULE_DEFINES ${FABRIC_MODULE_DEFINES} "__STDC_LIMIT_MACROS"  "__STDC_CONSTANT_MACROS")

	IF(FABRIC_BUILD_ARCH STREQUAL "i686")
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-m32")
		SET(FABRIC_MODULE_LINKFLAGS ${FABRIC_MODULE_LINKFLAGS} "-m32")
	ELSEIF(FABRIC_BUILD_ARCH STREQUAL "x86_64")
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-m64")
		SET(FABRIC_MODULE_LINKFLAGS ${FABRIC_MODULE_LINKFLAGS} "-m64")
	ENDIF(FABRIC_BUILD_ARCH STREQUAL "i686")

	IF(CMAKE_BUILD_TYPE MATCHES DEBUG)
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-g")
	ELSEIF(CMAKE_BUILD_TYPE MATCHES DEBUG)
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "-O2")
	ENDIF(CMAKE_BUILD_TYPE MATCHES DEBUG)
	
ELSEIF(FABRIC_BUILD_OS STREQUAL "Windows")
	SET(FABRIC_MODULE_DEFINES ${FABRIC_MODULE_DEFINES} "_SCL_SECURE_NO_WARNINGS=1" "_ITERATOR_DEBUG_LEVEL=0" "_SECURE_SCL=0" "_WIN32_WINNT=0x0600")

	SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "/EHsc" "/wd4624")
	SET(FABRIC_MODULE_LINKFLAGS ${FABRIC_MODULE_LINKFLAGS} "chkstk.obj")

	IF(FABRIC_BUILD_ARCH STREQUAL "x86_64")
		SET(FABRIC_MODULE_DEFINES ${FABRIC_MODULE_DEFINES} "WIN64")
	ENDIF(FABRIC_BUILD_ARCH STREQUAL "i686")

	IF(CMAKE_BUILD_TYPE MATCHES DEBUG)
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "/Od" "/Z7" "/MTd")
	ELSEIF(CMAKE_BUILD_TYPE MATCHES DEBUG)
		SET(FABRIC_MODULE_CFLAGS ${FABRIC_MODULE_CFLAGS} "/Ox" "/MT")
	ENDIF(CMAKE_BUILD_TYPE MATCHES DEBUG)
ENDIF(FABRIC_BUILD_OS STREQUAL "Darwin")



MACRO(add_fabricengine_extension name)

MESSAGE(STATUS "FabricEngine Extension ${name} with cpp sources: ${MODULE_CPP_SOURCES} kl sources: ${MODULE_KL_SOURCES}")
ADD_LIBRARY(${name} MODULE ${MODULE_CPP_SOURCES})

set_property(TARGET ${name} PROPERTY PREFIX "")

TARGET_LINK_LIBRARIES( ${name} ${MODULE_LIBS})

# set target properties
SET_TARGET_PROPERTIES( ${name} PROPERTIES COMPILE_FLAGS "${FABRIC_MODULE_CFLAGS}" )
SET_TARGET_PROPERTIES( ${name} PROPERTIES LINK_FLAGS "${FABRIC_MODULE_LINKFLAGS}" )
ADD_DEFINITIONS(${FABRIC_MODULE_DEFINES})

add_custom_command(TARGET ${name}
  OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/${name}.h
  COMMAND ${KL2EDK_BINARY} -o ${CMAKE_CURRENT_BINARY_DIR} ${MODULE_KL_SOURCES}
  VERBATIM
)

ADD_DEPENDENCIES(${name} ${CMAKE_CURRENT_BINARY_DIR}/${name}.h)

ENDMACRO()
